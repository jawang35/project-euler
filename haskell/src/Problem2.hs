{- |
Problem 2 - Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
the sum of the even-valued terms.
-}

module Problem2
( sumEvenFibonacciNumbers
, answer
) where

import Helpers.Runtime (printAnswerAndElapsedTime)

sumEvenFibonacciNumbers :: Integer -> Integer
sumEvenFibonacciNumbers maximum =
    sum $ takeWhile (\n -> n <= maximum) $ filter even fibs
    where fibs = 1 : 2 : zipWith (+) fibs (tail fibs)
          even number = number `mod` 2 == 0

answer = sumEvenFibonacciNumbers 4000000

main = printAnswerAndElapsedTime answer
